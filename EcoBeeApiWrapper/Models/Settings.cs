using EcoBeeApiWrapper.Enums;

namespace EcoBeeApiWrapper.Models
{
    public class Settings
    {
        public HvacMode HvacMode { get; set; }
        public string LastServiceDate { get; set; }
        public bool ServiceRemindMe { get; set; }
        public int MonthsBetweenService { get; set; }
        public VentilatorMode Vent { get; set; }
        public int VentilatorMinOnTime { get; set; }
        public bool ServiceRemindTechnician { get; set; }
        public string EiLocation { get; set; }
        public int ColdTempAlert { get; set; }
        public bool ColdTempAlertEnabled { get; set; }
        public int HotTempAlert { get; set; }
        public bool HotTempAlertEnabled { get; set; }
        public int CoolStages { get; set; }
        public int HeatStages { get; set; }
        public int MaxSetBack { get; set; }
        public int MaxSetForward { get; set; }
        public int QuickSaveSetBack { get; set; }
        public int QuickSaveSetForward { get; set; }
        public bool HasHeatPump { get; set; }
        public bool HasForcedAir { get; set; }
        public bool HasBoiler { get; set; }
        public bool HasHumidifier { get; set; }
        public bool HasErv { get; set; }
        public bool CondensationAvoid { get; set; }
        public bool UseCelcius { get; set; }
        public bool UseTimeFormat12 { get; set; }
        public string Locale { get; set; }
        public string Humidity { get; set; }
        public HumidifierMode HumidifierMode { get; set; }
        public int BacklightOnIntensity { get; set; }
        public int BacklightSleepIntensity { get; set; }
        public int BacklightOffTime { get; set; }
        public int SoundTickVolume { get; set; }
        public int SoundAlertVolume { get; set; }
        public int CompressorProtectionMinTime { get; set; }
        public int CompressorProtectionMinTemp { get; set; }
        public int Stage1HeatingDifferentialTemp { get; set; }
        public int Stage1CoolingDifferentialTemp { get; set; }
        public int Stage1HeatingDissipationTime { get; set; }
        public int Stage1CoolingDissipationTime { get; set; }
        public bool HeatPumpReversalOnCool { get; set; }
        public bool FanControlRequired { get; set; }
        public int FanMinOnTime { get; set; }
        public int HeatCoolMinDelta { get; set; }
        public int TempCorrection { get; set; }
        public HoldAction HoldAction { get; set; }
        public bool HeatPumpGroundWater { get; set; }
        public bool HasElectric { get; set; }
        public bool HasDehumidifier { get; set; }
        public DeHumidifierMode DeHumidifierMode { get; set; }
        public int DeHumidifierLevel { get; set; }
        public bool DeHumidifyWithAc { get; set; }
        public int DeHumidifyOvercoolOffset { get; set; }
        public bool AutoHeatCoolFeatureEnabled { get; set; }
        public bool WifiOfflineAlert { get; set; }
        public int HeatMinTemp { get; set; }
        public int HeatMaxTemp { get; set; }
        public int CoolMinTemp { get; set; }
        public int CoolMaxTemp { get; set; }
        public int HeatRangeHigh { get; set; }
        public int HeatRangeLow { get; set; }
        public int CoolRangeHigh { get; set; }
        public int CoolRangeLow { get; set; }
        public string UserAccessCode { get; set; }
        public int UserAccessSetting { get; set; }
        public int AuxRuntimeAlert { get; set; }
        public int AuxOutdoorTempAlert { get; set; }
        public int AuxMaxOutdoorTemp { get; set; }
        public bool AuxRuntimeAlertNotify { get; set; }
        public bool AuxOutdoorTempAlertNotify { get; set; }
        public bool AuxRuntimeAlertNotifyTechnician { get; set; }
        public bool AuxOutdoorTempAlertNotifyTechnician { get; set; }
        public bool DisablePreHeating { get; set; }
        public bool DisablePreCooling { get; set; }
        public bool InstallerCodeRequired { get; set; }
        public DrRequestResponse DrAccept { get; set; }
        public bool IsRentalProperty { get; set; }
        public bool UserZoneController { get; set; }
        public int RandomStartDelayCool { get; set; }
        public int RandomStartDelayHeat { get; set; }
        public int HumidityHighAlert { get; set; }
        public int HumidityLowAlert { get; set; }
        public bool DisableHeatPumpAlerts { get; set; }
        public bool DisableAlertsOnIdt { get; set; }
        public bool HumidityAlertNotify { get; set; }
        public bool HumidityAlertNotifyTechnician { get; set; }
        public bool TempAlertNotify { get; set; }
        public bool TempAlertNotifyTechnician { get; set; }
        public int MonthlyElectricityBillLimit { get; set; }
        public bool EnableElectricityBillAlert { get; set; }
        public bool EnableProjectedElectricityBillAlert { get; set; }
        public int ElectricityBillingDayOfMonth { get; set; }
        public int ElectricityBillCycleMonths { get; set; }
        public int ElectricityBillStartMonth { get; set; }
        public int VentilatorMinOnTimeHome { get; set; }
        public int VentilatorMinOnTimeAway { get; set; }
        public bool BacklightOffDuringSleep { get; set; }
        public bool AutoAway { get; set; }
        public bool SmartCirculation { get; set; }
        public bool FollowMeComfort { get; set; }
        public VentilatorType VentilatorType { get; set; }
        public bool IsVentilatorTimerOn { get; set; }
        public string VentilatorOffDateTime { get; set; }
        public bool HasUvFilter { get; set; }
        public bool CoolingLockout { get; set; }
        public bool VentilatorFreeCooling { get; set; }
        public bool DehumidifyWhenHeating { get; set; }
        public bool VentilatorDeHumidify { get; set; }
        public string GroupRef { get; set; }
        public string GroupName { get; set; }
        public string GroupSetting { get; set; }
    }
}
